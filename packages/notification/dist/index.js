var e=class{constructor(){this.moduleList=[]}registerModule(e){return Array.isArray(e)?this.moduleList.push(...e):this.moduleList.push(e),this}getModuleList(){return this.moduleList}checkModule(e){return e.getMessageBulder()?e.getPlatform()?e.getWebhook()?[!0,``]:[!1,`缺少Webhook地址`]:[!1,`缺少平台标识`]:[!1,`缺少消息构建器`]}seed(e){return this.moduleList.forEach(t=>{t.setMessageBulder(e);let[n,r]=this.checkModule(t);n?console.log(`模块 ${t.getPlatform()} 已就绪`):console.warn(`模块 ${t.getPlatform()} 配置检查失败: ${r}`)}),this}async sendAll(){let e=[];for(let t of this.moduleList)try{if(typeof t.send==`function`){let n=await t.send();e.push(n)}else console.warn(`模块 ${t.getPlatform()} 没有send方法`),e.push(!1)}catch(n){console.error(`模块 ${t.getPlatform()} 发送失败:`,n),e.push(!1)}return e}clearModules(){return this.moduleList=[],this}getModuleCount(){return this.moduleList.length}},t=class{constructor(){this.messageList=[]}setText(e){return this.messageList.push({type:`text`,content:e}),this}setMarkdown(e){return this.messageList.push({type:`markdown`,content:e}),this}getMessages(){return[...this.messageList]}getTextMessages(){return this.messageList.filter(e=>e.type===`text`)}getMarkdownMessages(){return this.messageList.filter(e=>e.type===`markdown`)}hasText(){return this.messageList.some(e=>e.type===`text`)}hasMarkdown(){return this.messageList.some(e=>e.type===`markdown`)}getText(){let e=this.messageList.find(e=>e.type===`text`);return e?e.content:``}getMarkdown(){let e=this.messageList.find(e=>e.type===`markdown`);return e?e.content:``}clear(){return this.messageList=[],this}getMessageCount(){return this.messageList.length}},n=class e extends t{constructor(){super()}static create(){return new e}build(){return this.hasMarkdown()?this.getMarkdown():this.hasText()?this.getText():``}getMessageType(){return this.hasMarkdown()?`markdown`:this.hasText()?`text`:`empty`}hasContent(){return this.hasText()||this.hasMarkdown()}},r=class{},i=class extends r{constructor(...e){super(...e),this.webhook=``,this.platform=``,this.msgBuilder=null}getWebhook(){return this.webhook}setWebhook(e){return this.webhook=e,this}getPlatform(){return this.platform}setPlatform(e){return this.platform=e,this}setMessageBulder(e){return this.msgBuilder=e,this}getMessageBulder(){return this.msgBuilder}};const a=`wxcom`;var o=class extends i{constructor(e){super(),this.platform=a,e&&this.setWebhook(e)}buildWxComMessages(e){let t=[],n=e.getMessages();for(let e of n)e.type===`text`?t.push({msgtype:`text`,text:{content:e.content}}):e.type===`markdown`&&t.push({msgtype:`markdown`,markdown:{content:e.content}});return t}async send(){if(!this.webhook)return console.error(`Webhook URL is required`),!1;if(!this.msgBuilder)return console.error(`MessageBuilder is required`),!1;try{let e=this.buildWxComMessages(this.msgBuilder);return e.length===0?(console.warn(`No messages to send`),!0):(await Promise.all(e.map(e=>this.sendSingleMessage(e)))).every(e=>e)}catch(e){return console.error(`Failed to send messages:`,e),!1}}async sendSingleMessage(e){try{let t=await fetch(this.webhook,{method:`POST`,headers:{"Content-Type":`application/json`},body:JSON.stringify(e)});if(!t.ok)return console.error(`HTTP error! status: ${t.status}`),!1;let n=await t.json();return n.errcode===0?!0:(console.error(`WeChat API error:`,n.errmsg),!1)}catch(e){return console.error(`Network error:`,e),!1}}};exports.Base=i,exports.Core=e,exports.MessageBuilder=n,exports.MessageBuilderPayload=t,exports.NotificationPlugin=r,exports.Wxcom=o,exports.platformWxCom=a;